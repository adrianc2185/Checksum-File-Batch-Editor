'---Version 2.3----


'------To Do List-------
'Create an Open Button and populate filenamebox with data from text file
'Allow user to choose save destination (Some options are hard-coded in)


Imports System
Imports System.IO
Imports System.Text

Public Class ChecksumEditor
    Public extracounter As String
    Public fs As FileStream
    Public fo
    Public extText As String

    Private Sub createbut_Click(sender As Object, e As EventArgs) Handles createbut.Click
        'Automatically changes algorithmcombo box to "CRC32" if combo box is left blank
        If AlgorithmCombo.Text = "" Then
            AlgorithmCombo.SelectedIndex = 0
        End If

        'Ensures that all required fields are filled out, otherwise a messagebox will pop up
        'If fields are not filled out, code will break
        If AlgorithmCombo.Text = "" Or DestinationText.Text = "" Or textnamebox.Text = "" Then
            MessageBox.Show("Please fill out all of the fields")
            Exit Sub
        End If

        'If extcheck Checkbox is checked, then will add extension in extensionbox at the end of every line of text; If not, then will add nothing
        If extcheck.Checked = True Then
            extText = "." & extensionbox.Text
        Else
            extText = ""
        End If

        'Declares location where textfile will be saved
        Dim flocation = "D:\Users\Adrian\Desktop\"
        'Declares file extension of the file being created
        Dim fext = ".exf"

        'Prevents overwriting of existing text file
        'If file exists, then the extracounter number will be added to the end of the text file to prevent overwriting
        If File.Exists(flocation + textnamebox.Text + fext) = True And overwritechk.Checked = False Then
            extracounter = 1
            Do While File.Exists(flocation + textnamebox.Text + " " + extracounter + fext) = True
                extracounter = extracounter + 1
            Loop
            fs = File.Create(flocation + textnamebox.Text + " " + extracounter + fext)
            fo = flocation + textnamebox.Text + " " + extracounter + fext
            MessageBox.Show("Success")
        Else
            fs = File.Create(flocation + textnamebox.Text + fext)
            fo = flocation + textnamebox.Text + fext
            MessageBox.Show("Success")
        End If



        'Splits and reads the multiple lines from the filenamebox and allows the text to be written into the text file line by line
        Dim strText() As String
        Dim CrcText As String
        strText = Split(filenamebox.Text, vbCrLf)


        Dim linecount As Integer = filenamebox.Lines.Count

        'Uses the number entered in the numberbox as the initial counter
        'kount is used to ensure that all of the text is written from first line to the bottom line
        'klimit is used as the counter to determine how many lines will be written into the text file
        Dim kount
        Dim klimit As String


        Dim filename() As String
        Dim fileresult As String

        'Splits and reads the multiple lines from filenamebox and allows the text to be written into the text file line by line
        filename = Split(filenamebox.Text, vbCrLf)


        If linecount > 0 Then
            klimit = linecount - 1
            kount = 0



            Dim opening As Byte() = New UTF8Encoding(True).GetBytes("; Checksums generated by ExactFile 1.0.0.15" & Environment.NewLine & "; http://www.exactfile.com" & Environment.NewLine &
                                                                 "; 6/3/2017 10:33:58 PM" & Environment.NewLine & Environment.NewLine)
            fs.Write(opening, 0, opening.Length)

            Do While klimit > -1
                'Reads the number of characters (Max 8) starting from the left of each line
                CrcText = Strings.Left(strText(kount), 8)
                'Reads the file names of each line
                fileresult = Path.GetFileName(filename(kount))
                'Write new data into the text file
                Dim info As Byte() = New UTF8Encoding(True).GetBytes(CrcText & " ?" & AlgorithmCombo.Text & "*" & DestinationText.Text & "\" & fileresult & extText & Environment.NewLine)
                fs.Write(info, 0, info.Length)

                kount = kount + 1
                klimit = klimit - 1
            Loop
        End If

        Dim closing As Byte() = New UTF8Encoding(True).GetBytes(Environment.NewLine & Environment.NewLine & "; 9999 files hashed.")
        fs.Write(closing, 0, closing.Length)

        DestinationText.Clear()
        filenamebox.Clear()
        fs.Close()

        'Automatically opens newly created 
        If opendatachk.Checked = True Then
            Process.Start(fo)
        End If
        'Automatically opens newly created file if opnchk is checked
        If openchk.Checked = True Then
            System.Diagnostics.Process.Start("Notepad.Exe", fo)
        End If



    End Sub
End Class
